{{#extend 'title'}}
  {{{sanitize @root/module.title}}}
{{/extend}}
{{#extend 'header-inject'}}
  <link rel="stylesheet" href="https://unpkg.com/easymde/dist/easymde.min.css">
  <link rel="stylesheet" href="https://unpkg.com/driver.js/dist/driver.min.css">
  <style>
    .intro_driver * {
      font-family: 'Space Grotesk', sans-serif !important;
    }

    #driver-highlighted-element-stage {
      border-radius: 0.5rem !important;
    }

    .intro_driver .driver-popover-title {
      font-size: 1.1em !important;
    }
  </style>
{{/extend}}
{{#*inline "submissionStatus"}}
  {{#switch (getSubmissionState @root/submissions module.module_id)}}
    {{#case 'pending'}}
      <strong class="has-text-warning">
        <span class="blinker active">●</span> Your submission is currently being graded — check back soon for results!
      </strong>
    {{/case}}
    {{#case 'rejected'}}
      <div class="columns is-vcentered">
        <div class="column is-narrow">
          <button class='button is-danger is-pulled-left modal-open' type='submit'>
            <strong>Resubmit Module</strong>
            <span class='icon'>
              <ion-icon name='arrow-forward-outline'></ion-icon>
            </span>
          </button>
        </div>
        <div class="column pl-0">
          <strong class="has-text-danger is-vcentered">
            <span class="blinker">●</span> Your previous submission was rejected.
          </strong>
        </div>
      </div>
    {{/case}}
    {{#case 'accepted'}}
      <strong class="has-text-success">
        <span class="blinker">●</span> Your submission was accepted! Chips have been granted to your account.
      </strong>
    {{/case}}
    {{#case ''}}
      <button class='button is-primary modal-open' type='submit'>
        <strong>Submit Module</strong>
        <span class='icon'>
          <ion-icon name='arrow-forward-outline'></ion-icon>
        </span>
      </button>
    {{/case}}
  {{/switch}}
{{/inline}}
<div class='page__modules__single'>
  <section class='section'>
    <div class='container'>
      <div class="level">
        <div class="level-left">
          <h1 class='title is-1 has-text-primary'>Week {{user.current_week}} — {{project.title}}</h1>
        </div>
        <div class="level-right is-hidden-mobile">
          <a href="/modules" class="button">
            <ion-icon name="arrow-back-outline"></ion-icon>
            <span>Back to Modules</span>
          </a>
        </div>
      </div>
      <nav class='breadcrumb' aria-label='breadcrumbs'>
        <strong>
          <ul>
            <li><a href='/modules'>Modules</a></li>
            <li class='is-active'><a href='#' aria-current='page'>{{module.title}}</a></li>
          </ul>
        </strong>
      </nav>
      <div class='columns'>
        <div class='column is-one-third'>
          <img src='{{project.thumbnail_url}}' alt='' class='card hero-image' />
        </div>
        <div class='column'>
          <div class='card' id="module_overview">
            <div class='card-header'>
              <h1 class='card-header-title icon-field'>
                <ion-icon name='information-circle-outline'></ion-icon>
                <span>
                  Module Overview
                </span>
              </h1>
              <span class="card-header-chip {{@root/submissions.0.state}}">
                +{{module.points}}&nbsp;{{>chip}}
              </span>
            </div>
            <div class='card-content has-text-weight-bold'>
              <h1 class='title has-text-primary mb-2'>{{module.title}}</h1>
              <div class='mb-5'>
                {{#unless module.required}}
                  <span class='tag is-primary is-light'>Optional</span>
                {{/unless}}
              </div>
              <p>{{module.description}}</p>
              <p class="mt-2">Got a question about this module? Please include the module ID in your question: <span class="tag is-primary">P{{project.project_id}}M{{module.module_id}}</span></p>
            </div>
            <div class='card-footer'>
              <div class='card-content py-4'>
                <div class="columns">
                  <div class="column is-narrow is-flex is-align-items-center">
                    <a id="read_module_button" class="button is-primary" href="https://module.techroulette.xyz/{{notion_link}}" target="_blank" />
                    <span>Read Module</span>
                    <span class='icon'>
                      <ion-icon name='arrow-forward-outline'></ion-icon>
                    </span>
                    </a>
                  </div>
                  <div class="column is-flex is-align-items-center">
                    {{> submissionStatus}}
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </section>
  {{#if @root/submissions.0.comments}}
    <div class="container">
      <div class="message is-light
        {{#switch @root/submissions.0.state}}
          {{#case 'accepted'}}
            is-success
          {{/case}}

          {{#case 'rejected'}}
            is-danger
          {{/case}}
        {{/switch}}
      ">
        <div class="message-header">
          <p><strong>Reader's Comments</strong></p>
        </div>
        <div class="message-body">
          <p id="submission-comment">{{@root/submissions.0.comments}}</p>
        </div>
      </div>
    </div>
  {{/if}}
  <form class='modal' action='' method='POST'>
    <div class='modal-background'></div>
    <div class='modal-card'>
      <header class='modal-card-head'>
        <h1 class='modal-card-title'>Module Submission</h1>
      </header>
      <section class='modal-card-body'>
        <p class='modal-message'>
          You're about to create a submission for
          <strong class='has-text-primary'>{{module.title}}.</strong>
          Select which type of content you would like to submit:
        </p>
        <div class='control mb-5'>
          <label class='radio'>
            <input type='radio' name='content_type' value='link' required />
            I'm submitting
            <strong>a link</strong>
            (repl.it / codesandbox / etc.)
          </label>
          <br />
          <label class='radio mt-2'>
            <input type='radio' name='content_type' value='content' required />
            I'm submitting
            <strong>written content</strong>
            (writeup / blog post / etc.)
          </label>
        </div>
        <div class='control' id='submission-link'>
          <input name='content' class='input' type='url' placeholder='https://your.submission.here/' required />
        </div>
        <div class="control" id='submission-content'>
          <textarea name='content' class='textarea' type='text' required></textarea>
        </div>
      </section>
      <footer class='modal-card-foot'>
        <div style='width: 100%;'>
          <button class='button is-danger modal-cancel' type='button'>
            <span>Close</span>
          </button>
          <button class='button is-primary is-pulled-right' type='submit'>
            <span>Send Submission</span>
            <span class='icon'>
              <ion-icon name='arrow-forward-outline'></ion-icon>
            </span>
          </button>
        </div>
      </footer>
    </div>
    <button class='modal-close modal-cancel is-large' aria-label='close'></button>
  </form>
</div>
{{! prettier-ignore }}
{{#extend 'scripts'}}
  <script src="https://unpkg.com/easymde/dist/easymde.min.js"></script>
  <script src="https://unpkg.com/driver.js/dist/driver.min.js"></script>
  <script nonce='{{@root/nonce}}'>
    const driver = new Driver({
      className: 'intro_driver',
      allowClose: false,
      onReset: (Element) => {
        localStorage.setItem('read_module_onboard', true)
      }
    });

    driver.defineSteps([
      {
        element: '#module_overview',
        popover: {
          title: 'The module-reading experience has changed!',
          description: `We've move the module contents to an external website. From now on, you'll be able to enjoy\
                        the modules with a better reading experience, dark mode, and cached!`,
        },
        position: 'left'
      },
      {
        element: '#read_module_button',
        popover: {
          title: 'Click here to get started with the module.',
          position: 'right'
        }
      }
    ]);

    if (!localStorage.getItem('read_module_onboard')) {
      driver.start();
    }
    const modal = document.querySelector(".modal")
    const submissionLink = document.querySelector('#submission-link')
    const submissionLinkInput = submissionLink.querySelector('input')
    const submissionContent = document.querySelector('#submission-content')
    const submissionContentInput = submissionContent.querySelector('textarea')

    const editor = new EasyMDE({
      element: submissionContent.querySelector('textarea'),
      spellChecker: false,
      forceSync: true,
      autosave: {
        enabled: true,
        uniqueId: `module-{{{ @root/module.module_id }}}-content`,
        delay: 1000,
      },
      autoFocus: true
    })

    submissionLink.style.display = 'none'
    submissionContent.style.display = 'none'

    document.querySelectorAll('input[type=radio]').forEach(node => {
      node.addEventListener('change', () => {
        if (node.value == 'link') {
          submissionLink.style.display = 'block'
          submissionContent.style.display = 'none'

          submissionLinkInput.disabled = false
          submissionContentInput.disabled = true
        } else {
          submissionLink.style.display = 'none'
          submissionContent.style.display = 'block'

          submissionLinkInput.disabled = true
          submissionContentInput.disabled = false

          editor.codemirror.refresh()
        }
      })
    })

    // Bind modal open buttons
    document.querySelectorAll(".modal-open").forEach((node) => {
      node.addEventListener("click", () => {
        modal.classList.add("is-active")
      })
    })

    // Close modal on background & cancel button click
    document
      .querySelectorAll(".modal-cancel, .modal-background")
      .forEach((node) => {
        node.addEventListener("click", () => {
          modal.classList.remove("is-active")
        })
      })
  </script>
{{/extend}}
