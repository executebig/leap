{{#extend "title"}}
    Exchange
{{/extend}}
<div class="page__exchange">
    <section class="section header pb-3">
        <div class="container">
            <h1 class="title is-1 mb-2">Roulette Exchange</h1>
            <p>Welcome to the Roulette Exchange! Rewards change from week to week, so be sure to redeem them while you can!</p>
        </div>
    </section>
    <div class="container">
        <div class="notification is-primary is-light">
            All purchases at the Roulette Exchange are <strong>final</strong>. Once you place your order, we cannot cancel your order or refund you
            for the cost of the item. This is to ensure that people are not stocking on items that are limited in supplies. Some items may only be
            available for students eligible for shipping, and others may only be useful in certain regions. <strong>We are not going to stop you from
                placing multiple orders for the same item.</strong> Before you place the order, please read the
            description clearly. If you have questions, please reach out to staff on Discord.
        </div>
    </div>
    <section class="section shop">
        <div class="container">
            <div class="columns is-multiline">
                {{#each rewards}}
                    <div class="column is-6 is-flex">
                        <div class="card reward is-flex is-flex-direction-column" reward-id="{{reward_id}}" reward-name="{{name}}" reward-price="{{price}}">
                            <div class="card-content is-flex-grow-1">
                                <div class="columns">
                                    <div class="column is-3">
                                        <p class="image">
                                            <img class="reward_image" src="{{image}}">
                                        </p>
                                    </div>
                                    <div class="column">
                                        <div class="content">
                                            <h1 class="title is-5 mb-3">{{name}}</h1>
                                            <p class="mb-2">
                                                {{description}}
                                            </p>
                                            <p class="mb-2">
                                                <strong>Delivery Method & Timeline:</strong> {{delivery}}
                                                {{#if needs_shipping}}
                                                    <strong>This reward requires physical shipping.</strong>
                                                {{/if}}
                                            </p>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="card-footer">
                                {{#if quantity}}
                                    <a class="purchase-button card-footer-item button is-primary">Buy for {{price}}&nbsp;{{>chip}}</a>
                                {{else}}
                                    <a class="card-footer-item button is-light" disabled>Sold Out</a>
                                {{/if}}
                            </div>
                        </div>
                    </div>
                {{/each}}
            </div>
        </div>
    </section>
</div>
<div class="modal">
    <div class="modal-background"></div>
    <div class="modal-card">
        <header class="modal-card-head">
            <h1 class="modal-card-title">Heads up!</h1>
        </header>
        <section class="modal-card-body">
            <p class="modal-message">
                You're about to purchase <strong class="modal-reward-name has-text-primary"></strong> for
                <strong class="modal-reward-price has-text-primary"></strong>{{>chip}} from the Roulette Exchange.
            </p>
            <p>All purchases at the Roulette Exchange are <strong>final</strong>.
                Once you place your order, we cannot cancel your order or refund you for the cost of the item.
            </p>
            <strong class="has-text-primary">Are you sure you want to continue?</strong>
        </section>
        <footer class="modal-card-foot">
            <form action="/exchange/purchase" method="POST" style="width: 100%">
                <button class="button is-danger modal-cancel" type="reset">
                    <span>Pick again</span>
                    <span class="icon">
                        <ion-icon name='refresh-outline'></ion-icon>
                    </span>
                </button>
                <button class="button is-primary is-pulled-right" type="submit">
                    <span>Purchase</span>
                    <span class="icon">
                        <ion-icon name='arrow-forward-outline'></ion-icon>
                    </span>
                </button>
                <input type="hidden" name="reward_id" class="modal-reward-id">
            </form>
        </footer>
    </div>
    <button class="modal-close modal-cancel is-large" aria-label="close"></button>
</div>
<script nonce="{{@root/nonce}}">
    const modal = document.querySelector(".modal")
    const modalRewardName = modal.querySelector('.modal-reward-name')
    const modalRewardPrice = modal.querySelector('.modal-reward-price')
    const modalRewardId = modal.querySelector('.modal-reward-id')

    // Close modal on ESC keypress
    document.addEventListener('keydown', ({key}) => {
        if (key === 'Escape') {
            modal.classList.remove('is-active')
        }
    })

    // Bind projects to modal + form
    document.querySelectorAll('.card.reward')
        .forEach(node => {
            const purchaseButton = node.querySelector('.purchase-button')
            if (purchaseButton) {
                purchaseButton.addEventListener('click', () => {
                    modal.classList.add('is-active')

                    modalRewardId.value = node.getAttribute('reward-id')
                    modalRewardName.textContent = node.getAttribute('reward-name')
                    modalRewardPrice.textContent = node.getAttribute('reward-price')
                })
            }
        })

    // Close modal on background & cancel button click
    document.querySelectorAll('.modal-cancel, .modal-background')
        .forEach(node => {
            node.addEventListener('click', () => {
                modal.classList.remove('is-active')
            })
        })

</script>
