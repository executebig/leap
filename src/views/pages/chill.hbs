{{#extend "title"}}
    Chill Zone
{{/extend}}
<div class="page__chill">
    <section class="section header">
        <div class="container">
            <h1 class="title is-1">Chill Zone üèñ</h1>
            <p>
                Thank you so much for being a part of Tech Roulette! We hope you enjoyed it as much as we did :)
            </p>
        </div>
    </section>
    <section class="section activities pt-0">
        <div class="container">
            <div class="columns">
                <div class="column">
                    <div class="card is-success">
                        <div class="card-header">
                            <h1 class="card-header-title">
                                <ion-icon name="megaphone"></ion-icon><span>Final Survey</span>
                            </h1>
                        </div>
                        <div class="card-content">
                            <p><strong>We'd love to hear your feedback!</strong></p>
                            <p class="mt-2">We'll be giving away prizes to those who complete the post-event survey! In order to be eligible for the giveaway, you must complete the survey by <strong class="has-text-primary">Saturday, 9/4</strong>. Giveaway winners will be announced the same day.</p>
                            <a href="https://executebig.org/techroulette/post-survey/?uid={{@root/user.user_id}}&email={{@root/user.email}}" class="button mt-5 is-primary" target="_blank" rel="noopener">
                                <ion-icon name="clipboard"></ion-icon><span>Complete Survey</span>
                            </a>
                        </div>
                    </div>
                </div>
                <div class="column">
                    <div class="card is-success">
                        <div class="card-header">
                            <h1 class="card-header-title">
                                <ion-icon name="people"></ion-icon><span>Intern at Execute Big!</span>
                            </h1>
                        </div>
                        <div class="card-content">
                            <p><strong>We're looking for interns to join our team!</strong></p>
                            <p class="mt-2">
                                At Execute Big, you can make real, tangible impact to help hundreds of students get proper access to an eye-opening CS exploration experience. You can very much shape the future of Execute Big! 
                            </p>
                            <a href="https://forms.gle/B4DZ7wUyz8EKVCwR9" class="button mt-5 is-primary" target="_blank" rel="noopener">
                                <ion-icon name="heart"></ion-icon><span>Read More & Apply</span>
                            </a>
                        </div>
                    </div>
                </div>
            </div>
            <div class="columns">
                <div class="column spotify is-one-third">
                    <iframe class="card" src="https://open.spotify.com/embed/album/0JGOiO34nwfUdDrD612dOp" frameborder="0" allowtransparency="true" allow="encrypted-media"></iframe>
                </div>
                <div class="column is-two-third">
                    <div class="card">
                        <div class="card-header">
                            <h1 class="card-header-title">
                                <ion-icon name="archive"></ion-icon><span>Rewards, Badges, & Previous Projects</span>
                            </h1>
                        </div>
                        <div class="card-content">
                            <p><strong>You can still view badges, order statuses, and previous projects!</strong></p>
                            <p class="mt-2">Badges & previous submissions can be found on your account profile page. You can also view redeemed rewards & check up on your order status on your past orders page.</p>
                            <span class="buttons">
                                <a href="/account" class="button mt-5 is-primary" target="_blank" rel="noopener">
                                    <ion-icon name="person"></ion-icon><span>View Account</span>
                                </a>
                                <a href="/exchange/orders" class="button mt-5 is-primary" target="_blank" rel="noopener">
                                    <ion-icon name="time"></ion-icon><span>View Past Orders</span>
                                </a>
                            </span>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>
</div>
{{#extend "scripts"}}
    <script nonce="{{@root/nonce}}">
        const programStarts = new Date("Sat, 3 Jul 2021 20:00:00 -0400")

        const getTimeRemaining = (endtime) => {
            const total = Date.parse(endtime) - Date.parse(new Date());
            const seconds = Math.floor((total / 1000) % 60);
            const minutes = Math.floor((total / 1000 / 60) % 60);
            const hours = Math.floor((total / (1000 * 60 * 60)) % 24);
            const days = Math.floor(total / (1000 * 60 * 60 * 24));

            return {
                total,
                days,
                hours,
                minutes,
                seconds
            };
        }

        function initializeClock(endtime) {
            let clock = document.querySelector('.countdown');
            let daysSpan = clock.querySelector('.days');
            let hoursSpan = clock.querySelector('.hours');
            let minutesSpan = clock.querySelector('.minutes');
            let secondsSpan = clock.querySelector('.seconds');

            function updateClock() {
                let t = getTimeRemaining(endtime);

                daysSpan.innerHTML = t.days;
                hoursSpan.innerHTML = ('0' + t.hours).slice(-2);
                minutesSpan.innerHTML = ('0' + t.minutes).slice(-2);
                secondsSpan.innerHTML = ('0' + t.seconds).slice(-2);

                if (t.total <= 0) {
                    clearInterval(timeinterval);
                }
            }

            updateClock();
            let timeinterval = setInterval(updateClock, 1000);
        }
        initializeClock(programStarts);
    </script>
{{/extend}}
