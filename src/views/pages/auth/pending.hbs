{{#extend "title"}}
    Link Sent
{{/extend}}
<div class="page__pending">
    <section class="section">
        <div class="container has-text-centered">
            <div class="loading">
                <svg version="1.1" id="loader-1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" width="40px" height="40px" viewBox="0 0 40 40" enable-background="new 0 0 40 40" xml:space="preserve">
                    <path opacity="0.2" fill="#000" d="M20.201,5.169c-8.254,0-14.946,6.692-14.946,14.946c0,8.255,6.692,14.946,14.946,14.946
    s14.946-6.691,14.946-14.946C35.146,11.861,28.455,5.169,20.201,5.169z M20.201,31.749c-6.425,0-11.634-5.208-11.634-11.634
    c0-6.425,5.209-11.634,11.634-11.634c6.425,0,11.633,5.209,11.633,11.634C31.834,26.541,26.626,31.749,20.201,31.749z" />
                    <path fill="#000" d="M26.013,10.047l1.654-2.866c-2.198-1.272-4.743-2.012-7.466-2.012h0v3.312h0
    C22.32,8.481,24.301,9.057,26.013,10.047z">
                        <animateTransform attributeType="xml" attributeName="transform" type="rotate" from="0 20 20" to="360 20 20" dur="0.5s" repeatCount="indefinite" />
                    </path>
                </svg>
            </div>
            <h1 class="title">
                <ion-icon name="mail-unread-outline"></ion-icon>
                <span class="header-text">Check your email, and keep this tab open!</span>
            </h1>
            <p class="backup-link">Your single-use log in link has been sent to <strong>{{email}}</strong>! Please click the link in the email from the same device that you want to log in on.</p>
            {{> shorts/need-help}}
        </div>
    </section>
</div>
{{#extend "scripts"}}
    <script>
        const socket = io({
            transports: ['websocket'],
            upgrade: false
        })
        const hash = "{{{../hash}}}"
        const windowCloseHandler = (e) => {
            e.preventDefault()
            e.returnValue = 'If you close this tab, your login link will become invalid. Are you sure?'
        }

        socket.on("connect", () => {
            socket.emit("auth_listen", hash)
        })

        socket.on("authenticate", (token) => {
            if (token) {
                window.removeEventListener('beforeunload', windowCloseHandler, {capture: true})
                document.querySelector('.header-text').innerText = "Login Verified! Redirecting..."
                document.querySelector('.backup-link').innerHTML = `If you are not redirected, <a href="/auth/login?token=${token}">click here</a>.`
                window.location.replace("/auth/login?token=" + token)
            }
        })

        socket.on("error", (message) => {
            window.removeEventListener('beforeunload', windowCloseHandler, {capture: true})
            window.location.replace("/")
        })

        window.addEventListener('beforeunload', windowCloseHandler, {capture: true})
    </script>
{{/extend}}
